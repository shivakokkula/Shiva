generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB")
}

model Role {
  id          Int      @id @default(autoincrement())
  name        String   @unique @db.VarChar(50)
  created_on  DateTime @default(now()) @db.Timestamp(0)
  modified_on DateTime @default(now()) @db.Timestamp(0)
  User        User[]
}

model User {
  id            Int             @id @default(autoincrement())
  phone         String          @unique @db.VarChar(20)
  password      String          @db.VarChar(100)
  status        Boolean         @default(true)
  name          String          @db.VarChar(50)
  email         String?         @db.VarChar(50)
  profile_pic   String?         @db.VarChar(255)
  created_on    DateTime        @default(now()) @db.Timestamp(0)
  modified_on   DateTime        @default(now()) @db.Timestamp(0)
  role_id       Int
  role          Role            @relation(fields: [role_id], references: [id])
  Payx_user     Payx_user?
  Qr            Qr[]
  Vendor        Vendor[]
  Staff         Staff[]
  Event         Event[]
  Order         Order[]
  Event_product Event_product[]
}

model Payx_user {
  id             Int              @id @default(autoincrement())
  amount         Float            @default(0)
  code           String           @unique @db.VarChar(100)
  created_on     DateTime         @default(now()) @db.Timestamp(0)
  modified_on    DateTime         @default(now()) @db.Timestamp(0)
  user_id        Int              @unique
  user           User             @relation(fields: [user_id], references: [id])
  Wallet_history Wallet_history[]
}

model Wallet_history {
  id           Int       @id @default(autoincrement())
  amount       Float     @default(0)
  payment_id   String    @db.VarChar(100)
  created_on   DateTime  @default(now()) @db.Timestamp(0)
  payx_user_id Int
  payx_user    Payx_user @relation(fields: [payx_user_id], references: [id])
}

model Qr {
  id                     Int                      @id @default(autoincrement())
  code                   String                   @unique @db.VarChar(100)
  amount                 Float                    @default(0)
  event_id               Int?
  user_id                Int?
  created_on             DateTime                 @default(now()) @db.Timestamp(0)
  modified_on            DateTime                 @default(now()) @db.Timestamp(0)
  event                  Event?                   @relation(fields: [event_id], references: [id])
  user                   User?                    @relation(fields: [user_id], references: [id])
  Staff_recharge_history Staff_recharge_history[]
  Refund_history         Refund_history[]
  Order                  Order[]
}

model Vendor {
  id       Int   @id @default(autoincrement())
  event_id Int
  user_id  Int
  event    Event @relation(fields: [event_id], references: [id])
  user     User  @relation(fields: [user_id], references: [id])
}

model Staff {
  id                     Int                      @id @default(autoincrement())
  event_id               Int
  user_id                Int
  can_recharge           Boolean                  @default(true)
  can_refund             Boolean                  @default(false)
  event                  Event                    @relation(fields: [event_id], references: [id])
  user                   User                     @relation(fields: [user_id], references: [id])
  Staff_recharge_history Staff_recharge_history[]
  Refund_history         Refund_history[]
}

model Staff_recharge_history {
  id         Int      @id @default(autoincrement())
  amount     Float    @default(0)
  payment_id String   @db.VarChar(100)
  pay_method String   @default("Online")
  created_on DateTime @default(now()) @db.Timestamp(0)
  qr_id      Int
  Qr         Qr       @relation(fields: [qr_id], references: [id])
  staff_id   Int
  staff      Staff    @relation(fields: [staff_id], references: [id])
}

model Refund_history {
  id             Int      @id @default(autoincrement())
  amount         Float    @default(0)
  status         Boolean  @default(true)
  ac_num         String   @db.VarChar(100)
  ifsc_code      String   @db.VarChar(100)
  bank_name      String   @db.VarChar(100)
  ac_holder_name String   @db.VarChar(100)
  created_on     DateTime @default(now()) @db.Timestamp(0)
  modified_on    DateTime @default(now()) @db.Timestamp(0)
  qr_id          Int
  Qr             Qr       @relation(fields: [qr_id], references: [id])
  staff_id       Int
  Staff          Staff    @relation(fields: [staff_id], references: [id])
}

model Company {
  id       Int     @id @default(autoincrement())
  name     String  @db.VarChar(100)
  location String? @db.VarChar(150)
  gst      String? @db.VarChar(50)
  phone    String? @db.VarChar(20)
  event_id Int
  event    Event   @relation(fields: [event_id], references: [id])
}

model Event {
  id               Int             @id @default(autoincrement())
  name             String          @unique @db.VarChar(50)
  location         String          @db.VarChar(255)
  start_date       String          @db.VarChar(50)
  end_date         String          @db.VarChar(50)
  status           Boolean         @default(true)
  approved         Boolean         @default(true)
  description      String?         @db.Text
  video            String?         @db.VarChar(255)
  amount           Float?          @default(0)
  remaining_amount Float?          @default(0)
  start_time       String?         @db.VarChar(50)
  end_time         String?         @db.VarChar(50)
  images           String[]
  created_on       DateTime        @default(now()) @db.Timestamp(0)
  modified_on      DateTime        @default(now()) @db.Timestamp(0)
  host_id          Int?
  host             User?           @relation(fields: [host_id], references: [id])
  Qr               Qr[]
  Vendor           Vendor[]
  Staff            Staff[]
  Company          Company[]
  Order            Order[]
  Event_product    Event_product[]
}

model FAQ {
  id          Int      @id @default(autoincrement())
  title       String   @unique @db.VarChar(255)
  description String   @db.Text
  status      Boolean  @default(true)
  created_on  DateTime @default(now()) @db.Timestamp(0)
  modified_on DateTime @default(now()) @db.Timestamp(0)
}

model Order {
  id              Int          @id @default(autoincrement())
  event_id        Int
  event           Event        @relation(fields: [event_id], references: [id])
  vendor_id       Int
  vendor          User         @relation(fields: [vendor_id], references: [id])
  qr_id           Int
  qr              Qr           @relation(fields: [qr_id], references: [id])
  amount          Float        @default(0)
  payment_id      String
  pay_method      String
  delivery_status String
  order_mode      String
  status          Boolean      @default(true)
  created_on      DateTime     @default(now()) @db.Timestamp(0)
  modified_on     DateTime     @default(now()) @db.Timestamp(0)
  Order_item      Order_item[]
}

model Order_item {
  id               Int           @id @default(autoincrement())
  order_id         Int
  order            Order         @relation(fields: [order_id], references: [id])
  event_product_id Int
  event_product    Event_product @relation(fields: [event_product_id], references: [id])
  quantity         Int
  created_on       DateTime      @default(now()) @db.Timestamp(0)
  modified_on      DateTime      @default(now()) @db.Timestamp(0)
}

model Event_product {
  id          Int          @id @default(autoincrement())
  event_id    Int
  event       Event        @relation(fields: [event_id], references: [id])
  vendor_id   Int
  vendor      User         @relation(fields: [vendor_id], references: [id])
  product_id  Int
  product     Product      @relation(fields: [product_id], references: [id])
  amount      Float        @default(0)
  available   Int
  offer_price Int
  status      Boolean      @default(true)
  created_on  DateTime     @default(now()) @db.Timestamp(0)
  modified_on DateTime     @default(now()) @db.Timestamp(0)
  Order_item  Order_item[]
}

model Product {
  id            Int             @id @default(autoincrement())
  name          String          @db.VarChar(255)
  description   String          @db.Text
  category      String          @db.VarChar(255)
  image         String          @db.VarChar(255)
  created_on    DateTime        @default(now()) @db.Timestamp(0)
  modified_on   DateTime        @default(now()) @db.Timestamp(0)
  Event_product Event_product[]
}
